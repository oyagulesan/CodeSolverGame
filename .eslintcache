[{"/Users/oyabenlioglugulesan/code-solver-game/src/index.js":"1","/Users/oyabenlioglugulesan/code-solver-game/src/reportWebVitals.js":"2","/Users/oyabenlioglugulesan/code-solver-game/src/App.js":"3","/Users/oyabenlioglugulesan/code-solver-game/src/context/AppContext.js":"4","/Users/oyabenlioglugulesan/code-solver-game/src/context/createDataContext.js":"5","/Users/oyabenlioglugulesan/code-solver-game/src/components/HelloComponent.js":"6","/Users/oyabenlioglugulesan/code-solver-game/src/hooks/holdNumber.js":"7","/Users/oyabenlioglugulesan/code-solver-game/src/components/GameComponent.js":"8"},{"size":500,"mtime":1609071461674,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1609071461675,"results":"11","hashOfConfig":"10"},{"size":392,"mtime":1609073704422,"results":"12","hashOfConfig":"10"},{"size":2029,"mtime":1609082733105,"results":"13","hashOfConfig":"10"},{"size":641,"mtime":1609073495130,"results":"14","hashOfConfig":"10"},{"size":1199,"mtime":1609144547571,"results":"15","hashOfConfig":"10"},{"size":838,"mtime":1609082763247,"results":"16","hashOfConfig":"10"},{"size":3572,"mtime":1609083514124,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"khx90i",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},"/Users/oyabenlioglugulesan/code-solver-game/src/index.js",[],["36","37"],"/Users/oyabenlioglugulesan/code-solver-game/src/reportWebVitals.js",[],"/Users/oyabenlioglugulesan/code-solver-game/src/App.js",[],"/Users/oyabenlioglugulesan/code-solver-game/src/context/AppContext.js",[],"/Users/oyabenlioglugulesan/code-solver-game/src/context/createDataContext.js",[],"/Users/oyabenlioglugulesan/code-solver-game/src/components/HelloComponent.js",["38","39"],"/Users/oyabenlioglugulesan/code-solver-game/src/hooks/holdNumber.js",[],"/Users/oyabenlioglugulesan/code-solver-game/src/components/GameComponent.js",["40","41","42","43","44","45","46","47","48","49"],"import React, {useContext, useState, useEffect} from 'react';\nimport {Context as AppContext} from '../context/AppContext';\nimport Button from 'react-bootstrap/Button'\nimport NumericInput from 'react-numeric-input';\n\nconst GameComponent = (props) => {\n    const { setGameOn, setGuesses, setIterations, state: {guesses, iterations, gameOn, numberToBeGuessed, initialMessage, description1, description2, description3, description4 }} = useContext(AppContext);\n    const [showNumber, setShowNumber] = useState(false);\n    const [err, setErr] = useState(null);\n    const [number, setNumber] = useState(0);\n    const [success, setSuccess] = useState(false);\n    \n    useEffect(() => {\n        setIterations(0);\n        setGuesses([]);\n    }, []);\n\n    function incrementIterations() {\n        setIterations(iterations.val + 1);\n    }\n    function unique(value, index, self) {\n        return self.indexOf(value) === index;\n    }\n\n    function makeGuess() {\n        if ((number + '').length != 4) {\n            setErr('Please input a 4 digit number without repeating digits ' + number);\n        } else {\n            const str = number + '';\n            let charArr = [...str];\n            charArr = charArr.filter(unique);\n            if (charArr.length < 4) {\n                setErr('Please make sure there are no repeating digits');\n            } else {\n                setErr(null);\n                incrementIterations();\n                let result = '';\n                for (let i = 0; i < 4; i++) {    \n                    console.log('.....numberToBeGuessed...', numberToBeGuessed.val, numberToBeGuessed.val.toString());\n                    const idx = numberToBeGuessed.val.toString().indexOf(number.toString().charAt(i));\n                    if (idx == i) {\n                        result = '+' + result;\n                    } else if (idx > -1) {\n                        result = result + '-';\n                    }\n                }\n                console.log('....result...' + result);\n                const newGuess = {guess: number, result};\n                if (result == '++++') {\n                    setSuccess(true);\n                }\n                setGuesses(guesses.val.concat(newGuess));\n            }\n        }\n    }\n\n    function endGame() {\n        setGameOn(false);\n    }\n\n    function toggleShowNumber() {\n        setShowNumber(showNumber ? false : true);\n    }\n\n    return <div>\n        <hr></hr>\n        <p>Game Started</p>\n        <div>\n        {guesses.val.map((item, index) => {\n            return <div key={index}>\n                <p>{index + 1 + ' Guess: ' + item.guess + ' - Result: ' + item.result}</p>\n                </div>\n        })}\n        {!success ?\n        <div>\n            <NumericInput min={0} max={9876} className=\"form-control\" onChange={val => setNumber(val)}/>\n            <Button style={{height: 40, width: 80, color: 'black', alignContent: 'center'}} onClick={makeGuess}>Guess</Button>\n        </div>\n        :\n        <p>{'You have found the number in ' + iterations.val + ' iterations'}</p>\n        }\n\n        {err && !success ? <p>{err}</p> : null}\n        {!success ? <Button style={{height: 40, width: 80, color: 'black', alignContent: 'center'}} onClick={toggleShowNumber}>{showNumber ? 'Hide Number' : 'Show Number'}</Button> : null }\n        {showNumber && !success ? <p>{numberToBeGuessed.val}</p> : null}\n        </div>\n        <div>\n        <Button style={{height: 40, width: 80, color: 'black', alignContent: 'center'}} onClick={endGame}>End Game</Button>\n        </div>\n    </div>\n} \nexport default GameComponent;",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":8,"column":41,"nodeType":"56","messageId":"57","endLine":8,"endColumn":58},{"ruleId":"58","severity":1,"message":"59","line":15,"column":8,"nodeType":"60","endLine":15,"endColumn":10,"suggestions":"61"},{"ruleId":"54","severity":1,"message":"62","line":7,"column":80,"nodeType":"56","messageId":"57","endLine":7,"endColumn":86},{"ruleId":"54","severity":1,"message":"63","line":7,"column":107,"nodeType":"56","messageId":"57","endLine":7,"endColumn":121},{"ruleId":"54","severity":1,"message":"64","line":7,"column":123,"nodeType":"56","messageId":"57","endLine":7,"endColumn":135},{"ruleId":"54","severity":1,"message":"65","line":7,"column":137,"nodeType":"56","messageId":"57","endLine":7,"endColumn":149},{"ruleId":"54","severity":1,"message":"66","line":7,"column":151,"nodeType":"56","messageId":"57","endLine":7,"endColumn":163},{"ruleId":"54","severity":1,"message":"67","line":7,"column":165,"nodeType":"56","messageId":"57","endLine":7,"endColumn":177},{"ruleId":"58","severity":1,"message":"68","line":16,"column":8,"nodeType":"60","endLine":16,"endColumn":10,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":26,"column":34,"nodeType":"72","messageId":"73","endLine":26,"endColumn":36},{"ruleId":"70","severity":1,"message":"74","line":41,"column":29,"nodeType":"72","messageId":"73","endLine":41,"endColumn":31},{"ruleId":"70","severity":1,"message":"74","line":49,"column":28,"nodeType":"72","messageId":"73","endLine":49,"endColumn":30},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'numberToBeGuessed' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setNumberLocal'. Either include it or remove the dependency array.","ArrayExpression",["77"],"'gameOn' is assigned a value but never used.","'initialMessage' is assigned a value but never used.","'description1' is assigned a value but never used.","'description2' is assigned a value but never used.","'description3' is assigned a value but never used.","'description4' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setGuesses' and 'setIterations'. Either include them or remove the dependency array.",["78"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [setNumberLocal]",{"range":"83","text":"84"},"Update the dependencies array to be: [setGuesses, setIterations]",{"range":"85","text":"86"},[612,614],"[setNumberLocal]",[736,738],"[setGuesses, setIterations]"]